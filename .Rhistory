# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
library(dplyr)
library(ggplot2)
# Load the Data
rw <- read.csv('wineQualityReds.csv')
head(rw)
str(rw)
qplot(x = fixed.acidity, data = rw)
qplot(x = volatile.acidity, data = rw)
qplot(x = citric.acid, data = rw)
qplot(x = residual.sugar, data = rw)
qplot(x = fixed.acidity, data = rw)
summary(rw$fixed.acidity)
qplot(x = fixed.acidity, data = rw)
summary(rw$fixed.acidity)
summary(rw)
summary(rw$fixed.acidity)
summary(rw$volatile.acidity)
summary(rw$citric.acid)
str(rw)
summary(rw$residual.sugar)
str(rw)
summary(rw$chlorides)
qplot(x = chlorides, data = rw)
qplot(x = chlorides, data = rw)
summary(rw$volatile.acidity)
summary(rw$residual.sugar)
summary(rw$chlorides)
summary(rw$chlorides)
qplot(x = free.sulfur.dioxide, data = rw)
summary(rw$free.sulfur.dioxide)
qplot(x = total.sulfur.dioxide, data = rw)
summary(rw$total.sulfur.dioxide)
qplot(x = volatile.acidity, data = rw)
summary(rw$volatile.acidity)
qplot(x = citric.acid, data = rw)
summary(rw$citric.acid)
qplot(x = residual.sugar, data = rw)
summary(rw$residual.sugar)
qplot(x = chlorides, data = rw)
summary(rw$chlorides)
qplot(x = free.sulfur.dioxide, data = rw)
summary(rw$free.sulfur.dioxide)
summary(rw$free.sulfur.dioxide)
qplot(x = pH, data = rw)
summary(rw$pH)
qplot(x = alcohol, data = rw)
summary(rw$alcohol)
summary(rw$alcohol)
qplot(x=quality, data=rw)
# Load packages
library(dplyr)
library(ggplot2)
# Load the Data
rw <- read.csv('wineQualityReds.csv')
qplot(x=quality, data=rw)
summary(rw$quality)
# Load packages
library(dplyr)
library(ggplot2)
library(GGally)
cor.test(rw, rw)
ggpairs(rw)
ggpairs(rw) + theme_gray(base_size = 8)
ggpairs(rw) + theme_gray(base_size = 6)
cor(rw)
cor(rw[fixed.acidity])
cor(rw[rw$fixed.acidity])
cor(rw[fixed.acidity])
cor(rw[c(fixed.acidity)])
cor(rw[c("fixed.acidity")])
str(rw)
foo = c("citric.acid", "residual.sugar", "chlorides", "pH", "alcohol", "quality")
ggpairs(rw[foo])
foo = c("free.sulfur.dioxide", "volatile.acidity", "citric.acid", "residual.sugar", "pH", "alcohol", "quality")
ggpairs(rw[foo])
qplot(x = alcohol, y = quality)
qplot(x = alcohol, y = quality, data = rw)
primary = c("free.sulfur.dioxide", "volatile.acidity", "citric.acid", "residual.sugar", "alcohol", "quality")
ggpairs(rw[primary])
qplot(x = citric.acid, y = quality, data = rw)
qplot(x = volatile.acidity, y = quality, data = rw)
qplot(x = citric.acid, y = volatile.acidity, data = rw)
primary = c("fixed.acidity", "chlorides", "total.sulfur.dioxide", "density", "pH", "sulphates", "quality")
ggpairs(rw[primary])
secondary = c("fixed.acidity", "chlorides", "total.sulfur.dioxide", "density", "pH", "sulphates", "quality")
ggpairs(rw[secondary])
secondary = c("fixed.acidity", "chlorides", "total.sulfur.dioxide", "density", "pH", "sulphates", "quality")
ggpairs(rw[secondary])
qplot(x = sulphates, y = quality, data = rw)
qplot(x = density, y = fixed.acidity, data= rw)
secondary = c("fixed.acidity", "chlorides", "total.sulfur.dioxide", "density", "pH", "sulphates", "quality")
ggpairs(rw[secondary])
secondary = c("fixed.acidity", "chlorides", "total.sulfur.dioxide", "density", \
secondary = c("fixed.acidity", "chlorides", "total.sulfur.dioxide", "density",
"pH", "sulphates", "quality")
ggpairs(rw[secondary])
rw$class <- 'Poor'
if(rw$quality > 4) {
rw$class <- 'Fair'
}
if(rw$quality > 6) {
rw$class <- 'Good'
}
View(rw)
View(rw)
rw$class <- 'Poor'
if(rw$quality > 4) {
rw$class <- 'Fair'
}else if(rw$quality > 6) {
rw$class <- 'Good'
}
rw$class <- 'Poor'
sapply(rw$quality, function(x) if(x > 5) { rw$class <- 'Fair'})
rw$class <- ifelse(rw$quality > 6, 'Good', ifelse(rw$quality > 4, 'Fair', 'Poor'))
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) + geom_point(color = class)
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) + geom_point(aes(color = class))
ggplot(aes(x = density, y = fixed.acidity), data = rw) + geom_point(aes(color = class))
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw)
+ geom_point(aes(color = class))
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class))
ggplot(aes(x = density, y = fixed.acidity), data = rw) +
geom_point(aes(color = class))
qplot(x = quality, data = rw)
qplot(x = quality, data = rw)
qplot(x = quality, data = rw, main="Distribution of Quality Ratings for Wine")
qplot(x = quality, data = rw, main="Distribution of Quality Ratings for Wine", ylab="Count", xlab="Rating")
qplot(x = quality, data = rw, main="Distribution of Quality Ratings for Wine", ylab="Count", xlab="Rating (0 - 10)")
qplot(x = quality, data = rw, main="Distribution of Quality Ratings for Wine", ylab="", xlab="Rating (0 to 10)")
qplot(x = quality, data = rw, main="Distribution of Quality Ratings for Wine", ylab="Count", xlab="Rating (0 to 10)")
qplot(x = quality, data = rw, main="Distribution of Quality Ratings for Wine", ylab="Count", xlab="Quality Rating (0 to 10)")
qplot(x = quality, data = rw, main="Distribution of Quality Ratings for Wine",
ylab="Count", xlab="Quality Rating (0 to 10)")
qplot(x = alcohol, y = quality, data = rw) + xlab("Alcohol (%)") +
ylab("Quality Rating (0 to 10)") + ggtitle("Relationship betwee Alcohol Level
and Rating")
qplot(x = alcohol, y = quality, data = rw) + xlab("Alcohol (%)") +
ylab("Quality Rating (0 to 10)") +
ggtitle("Relationship betwee Alcohol Level and Rating")
qplot(x = alcohol, y = quality, data = rw) + xlab("Alcohol (%)") +
ylab("Quality Rating (0 to 10)") +
ggtitle("Relationship between Alcohol Level and Rating")
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class)) + xlab("Citric Acid (g/cubic decimetre)") +
ylab("Volatile Acidity (g/cubic decimetre") +
ggtitle("Relationship between Citric Acid and Volatile Acidity")
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class)) + xlab("Citric Acid (g/cubic decimetre)") +
ylab("Volatile Acidity (g/cubic decimetre)") +
ggtitle("Relationship between Citric Acid and Volatile Acidity")
ggplot(aes(x = density, y = fixed.acidity), data = rw) +
geom_point(aes(color = class)) +
scale_color_brewer(type='seq', guide=guide_legend((title="Class")))
# Load packages
library(dplyr)
library(ggplot2)
library(GGally)
# Load the Data
rw <- read.csv('wineQualityReds.csv')
rw$class <-
ifelse(rw$quality > 6, 'Good', ifelse(rw$quality > 4, 'Fair', 'Poor'))
ggplot(aes(x = density, y = fixed.acidity), data = rw) +
geom_point(aes(color = class)) +
scale_color_brewer(type='seq', guide=guide_legend((title="Class")))
ggplot(aes(x = density, y = fixed.acidity), data = rw) +
geom_point(aes(color = class))
ggplot(aes(alcohol, factor(quality)), rw) + geom_jitter(alpha = 0.5)
ggplot(aes(x = alcohol,y = factor(quality)), data =  rw) + geom_jitter(alpha = 0.5)
ggplot(aes(quality, alcohol), data =  rw) + geom_jitter(alpha = 0.5)
ggplot(aes(quality, alcohol), data =  rw) + geom_jitter(alpha = 0.4)
ggplot(aes(quality, alcohol), data =  rw) + geom_jitter(alpha = 0.4) +
geom_boxplot(alpha = 0.5, color = 'blue')
ggplot(aes(quality, alcohol), data =  rw) + geom_jitter(alpha = 0.4) +
geom_boxplot(aes(group = quality), alpha = 0.5, color = 'blue')
ggplot(aes(quality, alcohol), data =  rw) + geom_jitter(alpha = 0.4) +
geom_boxplot(aes(group = quality), alpha = 0.5, color = 'blue') +
ggtitle("Alcohol Content per Wine Quality") +
ylab("Alcohol (%)") +
xlab("Quality Rating (0 to 10)")
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class), alpha = 0.6) + xlab("Citric Acid (g/cubic decimetre)") +
ylab("Volatile Acidity (g/cubic decimetre)") +
ggtitle("Relationship between Citric Acid and Volatile Acidity")
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class), alpha = 0.5) + xlab("Citric Acid (g/cubic decimetre)") +
ylab("Volatile Acidity (g/cubic decimetre)") +
ggtitle("Relationship between Citric Acid and Volatile Acidity")
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class)) + xlab("Citric Acid (g/cubic decimetre)") +
ylab("Volatile Acidity (g/cubic decimetre)") +
ggtitle("Relationship between Citric Acid and Volatile Acidity")
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class)) + xlab("Citric Acid (g/cubic decimetre)") +
ylab("Volatile Acidity (g/cubic decimetre)") +
ggtitle("Relationship between Citric Acid and Volatile Acidity") +
scale_color_brewer(type='seq')
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class)) + xlab("Citric Acid (g/cubic decimetre)") +
ylab("Volatile Acidity (g/cubic decimetre)") +
ggtitle("Relationship between Citric Acid and Volatile Acidity") +
scale_color_brewer(type='div')
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class)) + xlab("Citric Acid (g/cubic decimetre)") +
ylab("Volatile Acidity (g/cubic decimetre)") +
ggtitle("Relationship between Citric Acid and Volatile Acidity") +
scale_color_brewer(type='seq')
levels(rw$class)
rw$class
factor(rw$cut)
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = factor(class)) + xlab("Citric Acid (g/cubic decimetre)") +
ylab("Volatile Acidity (g/cubic decimetre)") +
ggtitle("Relationship between Citric Acid and Volatile Acidity") +
scale_color_brewer(type='seq')
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class)) + xlab("Citric Acid (g/cubic decimetre)") +
ylab("Volatile Acidity (g/cubic decimetre)") +
ggtitle("Relationship between Citric Acid and Volatile Acidity") +
scale_color_brewer(type='seq')
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class)) + xlab("Citric Acid (g/cubic decimetre)") +
ylab("Volatile Acidity (g/cubic decimetre)") +
ggtitle("Relationship between Citric Acid and Volatile Acidity") +
scale_color_brewer(type='seq') +
theme(panel.background = element_rect(fill = 'white'))
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class)) + xlab("Citric Acid (g/cubic decimetre)") +
ylab("Volatile Acidity (g/cubic decimetre)") +
ggtitle("Relationship between Citric Acid and Volatile Acidity") +
scale_color_brewer(type='seq') +
theme(panel.background = element_rect(fill = 'pink'))
qplot(x = class, data = rw)
# Load packages
library(dplyr)
library(ggplot2)
library(GGally)
# Load the Data
rw <- read.csv('wineQualityReds.csv')
qplot(x = class, data = rw)
rw$class <-
ifelse(rw$quality > 6, 'Good', ifelse(rw$quality > 4, 'Fair', 'Poor'))
qplot(x = class, data = rw)
qplot(x = alcohol, y = quality, data = rw)
ggplot(aes(alcohol, quality), data = rw) +
geom_jitter(alpha = 0.4) +
geom_boxplot(aes(group = quality), alpha = 0.5, color = 'blue')
qplot(x = alcohol, y = quality, data = rw)
ggplot(aes(alcohol, quality), data = rw) +
geom_jitter(alpha = 0.4)
ggplot(aes(alcohol, quality), data = rw) +
geom_jitter(alpha = 0.4) +
geom_boxplot(aes(group = quality), alpha = 0.5, color = 'blue')
ggplot(aes(alcohol, quality), data = rw) +
geom_jitter(alpha = 0.4)
ggplot(aes(quality, citric.acid), data = rw) +
geom_jitter(alpha = 0.4)
ggplot(aes(citric.acid, quality), data = rw) +
geom_jitter(alpha = 0.4)
ggplot(aes(volatile.acidity, quality), data = rw) +
geom_jitter(alpha = 0.4)
qplot(x = citric.acid, y = volatile.acidity, data = rw)
ggplot(aes(citric.acid, volatile.acidity), data = rw) +
geom_point(alpha = 0.4)
ggplot(aes(sulphates, quality), data = rw) +
geom_jitter(alpha = 0.4)
ggplot(aes(sulphates, quality), data = rw) +
geom_jitter(alpha = 0.3)
ggplot(aes(sulphates, quality), data = rw) +
geom_jitter(alpha = 0.1)
ggplot(aes(sulphates, quality), data = rw) +
geom_jitter(alpha = 0.2)
ggplot(aes(density, fixed.acidity), data = rw) +
geom_point(alpha = 0.3)
ggplot(aes(citric.acid, volatile.acidity), data = rw) +
geom_point(alpha = 0.3)
ggplot(aes(volatile.acidity, quality), data = rw) +
geom_jitter(alpha = 0.3)
ggplot(aes(citric.acid, quality), data = rw) +
geom_jitter(alpha = 0.3)
ggplot(aes(alcohol, quality), data = rw) +
geom_jitter(alpha = 0.3)
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class), alpha = 0.5)
ggplot(aes(x = density, y = fixed.acidity), data = rw) +
geom_point(aes(color = class), alpha = 0.5)
qplot(x = factor(quality), data = rw, main="Distribution of Quality Ratings for Wine",
ylab="Count", xlab="Quality Rating (0 to 10)")
ggplot(aes(factor(quality), alcohol), data =  rw) + geom_jitter(alpha = 0.4) +
geom_boxplot(aes(group = quality), alpha = 0.5, color = 'blue') +
ggtitle("Alcohol Content per Wine Quality") +
ylab("Alcohol (%)") +
xlab("Quality Rating (0 to 10)")
qplot(x=factor(quality), data=rw)
qplot(x = factor(class), data = rw)
ggplot(rw, aes(x=factor(quality))) + geom_bar()
ggplot(rw, aes(factor(class))) + geom_bar()
ggplot(rw, aes(class)) + geom_bar()
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class), alpha = 0.6) + xlab("Citric Acid (g/cubic decimetre)") +
ylab("Volatile Acidity (g/cubic decimetre)") +
ggtitle("Relationship between Citric Acid and Volatile Acidity") +
scale_color_brewer(type='seq') +
theme(panel.background = element_rect(fill = 'pink'))
unlink('projecttemplate_cache', recursive = TRUE)
univar_plot <- function(phychem) {
return(qplot(x = phychem, data = rw))
}
univar_plot(volatile.acidity)
univar_plot <- function(phychem) {
return(qplot(x = phychem))
}
univar_plot(rw$volatile.acidity)
# load packages
library(dplyr)
library(ggplot2)
library(GGally)
# load data
rw <- read.csv('wineQualityReds.csv')
univar_plot <- function(phychem) {
return(qplot(x = phychem))
}
univar_plot(rw$volatile.acidity)
univar_plot <- function(phychem) {
return(qplot(x = phychem, xlab = phychem))
}
univar_plot(rw$volatile.acidity)
qplot(x = volatile.acidity, data = rw)
# load packages
library(dplyr)
library(ggplot2)
library(GGally)
# load data
rw <- read.csv('wineQualityReds.csv')
qplot(x = volatile.acidity, data = rw)
qplot(x = volatile.acidity, data = rw, binwidth= 10)
qplot(x = volatile.acidity, data = rw, binwidth= 0.1)
qplot(x = volatile.acidity, data = rw, binwidth= 0.05)
qplot(x = volatile.acidity, data = rw, binwidth= 0.1)
qplot(x = volatile.acidity, data = rw, binwidth= 0.1) +
scale_x_continuous(limits = c(0, 1.5), breaks = seq(0, 1.5, 0.2))
qplot(x = volatile.acidity, data = rw, binwidth= 0.1) +
scale_x_continuous(limits = c(0, 1.5), breaks = seq(0, 1.5, 0.2))
qplot(x = volatile.acidity, data = rw, binwidth= 0.1) +
scale_x_continuous(limits = c(0, 1.5), breaks = seq(0, 1.5, 0.2))
qplot(x = citric.acid, data = rw)
qplot(x = volatile.acidity, data = rw, binwidth= 0.1) +
scale_x_continuous(breaks = seq(0, 1.5, 0.2))
qplot(x = citric.acid, data = rw) +
scale_x_continuous(breaks = seq(0, 1, 0.2))
qplot(x = citric.acid, data = rw) +
scale_x_continuous(breaks = seq(0, 1, 0.3))
qplot(x = citric.acid, data = rw) +
scale_x_continuous(breaks = seq(0, 1, 0.5))
qplot(x = citric.acid, data = rw) +
scale_x_continuous(breaks = seq(0, 1, 0.01))
qplot(x = citric.acid, data = rw) +
scale_x_continuous(breaks = seq(0, 1, 0.2))
qplot(x = citric.acid, data = rw, binwidth = 0.1) +
scale_x_continuous(breaks = seq(0, 1, 0.2))
qplot(x = citric.acid, data = rw, binwidth = 0.05) +
scale_x_continuous(breaks = seq(0, 1, 0.2))
qplot(x = residual.sugar, data = rw)
qplot(x = residual.sugar, data = rw) +
scale_x_continuous(breaks = seq(0, 16, 1))
qplot(x = residual.sugar, data = rw) +
scale_x_continuous(breaks = seq(0, 16, 2))
qplot(x = residual.sugar, data = rw, binwidth = 1) +
scale_x_continuous(breaks = seq(0, 16, 2))
qplot(x = residual.sugar, data = rw, binwidth = 0.5) +
scale_x_continuous(breaks = seq(0, 16, 2))
qplot(x = chlorides, data = rw)
qplot(x = chlorides, data = rw, bin = 0.5) +
scale_x_continuous(breaks = seq(0, 0.6, 0.1))
qplot(x = chlorides, data = rw, binwidth = 0.5) +
scale_x_continuous(breaks = seq(0, 0.6, 0.1))
qplot(x = chlorides, data = rw, binwidth = 0.05) +
scale_x_continuous(breaks = seq(0, 0.6, 0.1))
qplot(x = chlorides, data = rw, binwidth = 0.01) +
scale_x_continuous(breaks = seq(0, 0.6, 0.1))
qplot(x = chlorides, data = rw, binwidth = 0.02) +
scale_x_continuous(breaks = seq(0, 0.6, 0.1))
qplot(x = chlorides, data = rw, binwidth = 0.03) +
scale_x_continuous(breaks = seq(0, 0.6, 0.1))
qplot(x = chlorides, data = rw, binwidth = 0.02) +
scale_x_continuous(breaks = seq(0, 0.6, 0.1))
qplot(x = free.sulfur.dioxide, data = rw)
qplot(x = free.sulfur.dioxide, data = rw) +
scale_x_continuous(breaks = seq(0, 60, 10))
qplot(x = free.sulfur.dioxide, data = rw, binwidth = 2) +
scale_x_continuous(breaks = seq(0, 60, 10))
qplot(x = free.sulfur.dioxide, data = rw, binwidth = 5) +
scale_x_continuous(breaks = seq(0, 60, 10))
qplot(x = free.sulfur.dioxide, data = rw, binwidth = 3) +
scale_x_continuous(breaks = seq(0, 60, 10))
qplot(x = pH, data = rw)
qplot(x = pH, data = rw) +
scale_x_continuous(breaks = seq(0, 4, 1))
qplot(x = pH, data = rw, binwidth = 1) +
scale_x_continuous(breaks = seq(0, 4, 1))
qplot(x = pH, data = rw, binwidth = 0.5) +
scale_x_continuous(breaks = seq(0, 4, 1))
qplot(x = pH, data = rw, binwidth = 0.1) +
scale_x_continuous(breaks = seq(0, 4, 1))
summary(rw$pH)
qplot(x = alcohol, data = rw)
qplot(x = alcohol, data = rw) +
scale_x_continuous(breaks = seq(0, 16, 4))
qplot(x = alcohol, data = rw) +
scale_x_continuous(breaks = seq(0, 16, 2))
qplot(x = alcohol, data = rw, binwidth = 1) +
scale_x_continuous(breaks = seq(0, 16, 2))
qplot(x = alcohol, data = rw, binwidth = 1) +
scale_x_continuous(breaks = seq(0, 16, 1))
ggplot(rw, aes(x=factor(quality))) + geom_bar()
rw$class <-
ifelse(rw$quality > 6, 'Good', ifelse(rw$quality > 4, 'Fair', 'Poor'))
ggplot(rw, aes(class)) + geom_bar()
primary = c("free.sulfur.dioxide", "volatile.acidity", "citric.acid",
"residual.sugar", "alcohol", "quality")
ggpairs(rw[primary])
ggplot(aes(alcohol, quality), data = rw) +
geom_jitter(alpha = 0.3)
ggplot(aes(citric.acid, quality), data = rw) +
geom_jitter(alpha = 0.3)
ggplot(aes(volatile.acidity, quality), data = rw) +
geom_jitter(alpha = 0.3)
secondary = c("fixed.acidity", "chlorides", "total.sulfur.dioxide", "density",
"pH", "sulphates", "quality")
ggpairs(rw[secondary])
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class), alpha = 0.5)
ggplot(aes(x = density, y = fixed.acidity), data = rw) +
geom_point(aes(color = class), alpha = 0.5)
qplot(x = factor(quality), data = rw, main="Distribution of Quality Ratings for Wine",
ylab="Count", xlab="Quality Rating (0 to 10)")
ggplot(aes(factor(quality), alcohol), data =  rw) + geom_jitter(alpha = 0.4) +
geom_boxplot(aes(group = quality), alpha = 0.5, color = 'blue') +
ggtitle("Alcohol Content per Wine Quality") +
ylab("Alcohol (%)") +
xlab("Quality Rating (0 to 10)")
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class), alpha = 0.6) + xlab("Citric Acid (g/cubic decimetre)") +
ylab("Volatile Acidity (g/cubic decimetre)") +
ggtitle("Relationship between Citric Acid and Volatile Acidity") +
scale_color_brewer(type='seq') +
theme(panel.background = element_rect(fill = 'pink'))
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class), alpha = 0.6) + xlab("Citric Acid (g/cubic decimetre)") +
ylab("Volatile Acidity (g/cubic decimetre)") +
ggtitle("Relationship between Citric Acid and Volatile Acidity")
ggplot(aes(x = citric.acid, y = volatile.acidity), data = rw) +
geom_point(aes(color = class), alpha = 0.6) + xlab("Citric Acid (g/cubic decimetre)") +
ylab("Volatile Acidity (g/cubic decimetre)") +
ggtitle("Relationship between Citric Acid and Volatile Acidity")
knit_with_parameters('~/Desktop/projects/DAND/wineRatings/wineRatings.rmd')
